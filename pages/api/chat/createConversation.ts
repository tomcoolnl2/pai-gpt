// will be running in a Node environment
import { NextApiRequest, NextApiResponse } from 'next';
import { getSession } from '@auth0/nextjs-auth0';
import clientPromise from 'lib/mongodb';
import { ConversationPayload, MessagePayload } from 'model';

type ResponseError = {
	message: string;
};

type ResponseData = ConversationPayload | ResponseError;

export default async function createConversation(
	req: NextApiRequest,
	res: NextApiResponse<ResponseData>,
): Promise<void> {
	try {
		//
		const { user } = await getSession(req, res);
		const { payload } = req.body;

		if (!payload.content || typeof payload.content !== 'string' || payload.content.length > 200) {
			res.status(422).json({
				message: 'Message is required and must be less then 200 characters',
			});
			return;
		}

		const title = payload.content || 'No title';
		const messages: MessagePayload[] = [payload];
		const body = { title, messages };

		const client = await clientPromise;
		const db = client.db('pai-gpt');
		const conversation = await db.collection('conversations').insertOne({
			userId: user.sub,
			...body,
		});

		res.status(200).json({
			_id: conversation.insertedId.toString(), // mongodb autogenerated id
			...body,
		});
		//
	} catch (e) {
		res.status(500).json({
			message: 'An error occured when creating a new conversation.',
		});
	}
}
