// will be running in a Node environment
import { NextApiRequest, NextApiResponse } from 'next';
import { ObjectId } from 'mongodb';
import { getSession } from '@auth0/nextjs-auth0';
import clientPromise from 'lib/mongodb';

type Message = { role: string; content: string };

type ResponseSuccess = {
	id: ObjectId;
	title: string;
	messages: Message[];
};

type ResponseError = {
	message: string;
};

type ResponseData = ResponseSuccess | ResponseError;

export default async function createConversation(
	req: NextApiRequest,
	res: NextApiResponse<ResponseData>,
): Promise<void> {
	try {
		//
		const { user } = await getSession(req, res);
		const { prompt: content } = req.body;
		const title = content;
		const newUserMessage = { role: 'user', content };
		const messages = [newUserMessage];
		const body = { title, messages };

		const client = await clientPromise;
		const db = client.db('pai-gpt');
		const conversation = await db.collection('conversations').insertOne({
			userId: user.sub,
			...body,
		});

		res.status(200).json({
			id: conversation.insertedId, // mongodb autogenerated id
			...body,
		});
		//
	} catch (e) {
		res.status(500).json({
			message: 'An error occured when creating a new conversation.',
		});
	}
}
